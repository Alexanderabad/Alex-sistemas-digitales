module binary_counter_7seg (
    input wire clk,      // Reloj del sistema
    input wire nreset,   // Señal de reinicio activa baja
    output reg [6:0] seg // Salida para el display de 7 segmentos
);

    reg [3:0] count;  // Contador de 4 bits

    // Contador de 0 a 9
    always @(posedge clk or negedge nreset) begin
        if (!nreset) begin
            count <= 4'b0000;  // Reiniciar el contador a 0 cuando nreset es 0
        end else begin
            if (count == 4'd9) begin
                count <= 4'b0000;  // Reiniciar a 0 después de 9
            end else begin
                count <= count + 1;  // Incrementar el contador
            end
        end
    end

    // Decodificador de 7 segmentos para el display
    always @(*) begin
        case (count) //            gfedcba
            4'b0000: seg[6:0] = 7'b1000000;// 0
            4'b0001: seg [6:0]= 7'b1111001;// 1
            4'b0010: seg[6:0] = 7'b0100100;// 2
            4'b0011: seg [6:0]= 7'b0110000;// 3
            4'b0100: seg [6:0]= 7'b0011001;// 4
            4'b0101: seg [6:0]= 7'b0010010;// 5 
            4'b0110: seg [6:0]= 7'b0000010;// 6
            4'b0111: seg[6:0] = 7'b1111000;// 7
            4'b1000: seg[6:0] = 7'b0000000;// 8
            4'b1001: seg[6:0] = 7'b0011000;// 9
            default: seg [6:0]= 7'b1111111;// Apagado
        endcase
    end

endmodule